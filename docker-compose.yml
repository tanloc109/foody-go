# docker compose up -d
# docker compose down --volumes
services:
  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: postgresql
      POSTGRES_DB: postgresql
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  mysql:
    container_name: mysql
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql:/var/lib/mysql
    restart: unless-stopped

  mssql:
    container_name: mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      #MSSQL_ROOT_PASSWORD: mssql
      MSSQL_DATABASE: mssql_db
      SA_PASSWORD: McnYVd:ZSHvz4X)t
      ACCEPT_EULA: Y
    ports:
      - "1433:1433"
    volumes:
      - mssql:/var/opt/mssql
    restart: no

  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    #      MONGO_INITDB_DATABASE: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/lib
    restart: unless-stopped

  oracledb:
    container_name: oracledb
    image: container-registry.oracle.com/database/free:latest
    environment:
      ORACLE_PWD: oracledb
      ORACLE_SID: oracledb
    ports:
      - "1521:1521"
    volumes:
      - oracle:/opt/oracle/oradata
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

volumes:
  postgres:
  mysql:
  mssql:
  mongo:
  oracle:
  redis: